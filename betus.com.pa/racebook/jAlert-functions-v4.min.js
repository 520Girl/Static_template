
/* Optional functions that are a shortcut to call jAlert */
function alert_old(e, n) { "undefined" == typeof n && (n = e, e = ""), $.jAlert({ title: e, content: n }) } function confirm_old(e, n) { $.jAlert({ type: "confirm", onConfirm: e, onDeny: n }) } function showAlert(e, n, t) { $.jAlert({ title: e, content: n, theme: t }) } function successAlert(e, n) { "undefined" == typeof n && (n = e, e = "Success"), showAlert(e, n, "green") } function errorAlert(e, n) { "undefined" == typeof n && (n = e, e = "Error"), showAlert(e, n, "red") } function infoAlert(e, n) { "undefined" == typeof n && (n = e, e = "Info"), showAlert(e, n, "blue") } function warningAlert(e, n) { "undefined" == typeof n && (n = e, e = "Warning"), showAlert(e, n, "yellow") } function blackAlert(e, n) { "undefined" == typeof n && (n = e, e = "Warning"), showAlert(e, n, "black") } function imageAlert(e, n) { "auto" == typeof n && (iframeHeight = !1), $.jAlert({ image: e, imageWidth: n }) } function videoAlert(e) { $.jAlert({ video: e }) } function iframeAlert(e, n) { "undefined" == typeof n && (n = !1), $.jAlert({ iframe: e, iframeHeight: n }) } function ajaxAlert(e, n) { "undefined" == typeof n && (n = function() { return !1 }), $.jAlert({ ajax: e, onOpen: n }) }

function alert(title, msg) {
    if (typeof msg == 'undefined') {
        msg = title;
        title = '';
    }
    if (typeof parentIFrame != 'undefined' && _useAlertInParent) {
        /*$('#dvContent').css('height', window.innerHeight);
        setTimeout(function() {
        $.jAlert({
        'title': title,
        'content': msg,
        onClose: function() {
        $('#dvContent').css('height', '');
        }
        });
        }, 100);*/
        parentIFrame.sendMessage(msg);
    }
    else {

        setTimeout(function () {
            $.jAlert({
                'title': title,
                'content': msg,
                'onOpen': focusClose
            });
            try {
                scrollToTop();
            } catch (e) { }
        }, 100);
    }
}

function confirm(msg, confirmCallback, denyCallback) {
    setTimeout(function() {
        $.jAlert({ 'type': 'confirm', 'onConfirm': confirmCallback, 'onDeny': denyCallback, 'confirmQuestion': msg, 'confirmBtnText': messages.lblYes, 'denyBtnText': messages.lblNo, 'closeBtn': false, 'confirmAutofocus': '' });
        try {
            if (isMobile.any()) {
                if (RequiresIframeScrollFix()) {
                    window.parent.postMessage($("#dvRootMobile")[0].getBoundingClientRect().top, "*"); // Tell IFrame parent to do the scrolling. If this is not a test environment, replace "*" with the parent domain.
                }
                else {
                    $("#dvRootMobile")[0].scrollIntoView(true);
                }
            }
            else {
                $("#dvContent")[0].scrollIntoView(true);
            }
        } catch (e) { }
    }, 100);
}

function jconfirm(msg, confirmCallback, denyCallback) {
    setTimeout(function () {
        $.jAlert({ 'type': 'confirm', 'onConfirm': confirmCallback, 'onDeny': denyCallback, 'confirmQuestion': msg, 'confirmBtnText': messages.lblYes, 'denyBtnText': messages.lblNo, 'closeBtn': false, 'confirmAutofocus': '' });
        try {
            if (isMobile.any()) {
                if (RequiresIframeScrollFix()) {
                    window.parent.postMessage($("#dvRootMobile")[0].getBoundingClientRect().top, "*"); // Tell IFrame parent to do the scrolling. If this is not a test environment, replace "*" with the parent domain.
                }
                else {
                    $("#dvRootMobile")[0].scrollIntoView(true);
                }
            }
            else {
                $("#dvContent")[0].scrollIntoView(true);
            }
        } catch (e) { }
    }, 100);
}

function alertOnClose(msg, onCloseCallback) {
    if (typeof msg == 'undefined') {
        msg = '';
        title = '';
    }

    setTimeout(function() {
        $.jAlert({
            'title': '',
            'content': msg,
            'onClose': onCloseCallback,
            'onOpen': focusClose
        });
        try {
            if (isMobile.any()) {
                if (RequiresIframeScrollFix()) {
                    window.parent.postMessage($("#dvRootMobile")[0].getBoundingClientRect().top, "*"); // Tell IFrame parent to do the scrolling. If this is not a test environment, replace "*" with the parent domain.
                }
                else {
                    $("#dvRootMobile")[0].scrollIntoView(true);
                }
            }
            else {
                $("#dvContent")[0].scrollIntoView(true);
            }
        } catch (e) { }
    }, 100);

}

